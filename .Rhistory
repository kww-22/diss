# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Shoulder Rotation Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(8,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(8,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(8,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(8,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(8,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(8,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(8,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(8,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(35,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
setwd("C:/Users/kylew/Documents/GitHub/diss/data/txts_test")
# =====================
# get_kinetics.R
# purpose: runs through MotionMonitor txt outputs and cbinds generated dataframe to
#          original master csv from get_velos.R
# author: Kyle Wasserberger
# last updated: 2021-07-01
# =====================
#### initialize data frome and set directory ####
kinetics_info <- data.frame()
setwd("C:/Users/kylew/Documents/GitHub/diss/data/txts_test")
file_list <- list.files(pattern = "warmup")
#### loop through txt files ####
for(i in 1:length(file_list)){
txt_data <- read_delim(file_list[i], skip = 10, delim = "\t")
if(str_detect(file_list[i],pattern = "BAD")){
row_data <- c(NA,NA)} else{
if(max(txt_data$RwristLinVelo) > max(txt_data$LwristLinVelo)){
ind_max <- which.max(txt_data$RwristLinVelo)
} else{
ind_max <- which.max(txt_data$LwristLinVelo)
}
txt_new <- txt_data[1:ind_max,]
max_elb_var <- max(txt_new$var_mom)
max_shldr_IR <- max(txt_new$ir_mom)
row_data <- c(max_elb_var, max_shldr_IR)}
kinetics_info <- rbind.data.frame(kinetics_info, row_data)
}
# customize data frame column names
colnames(kinetics_info) <- c("elb_var", "shldr_ir")
# bind data frame to velo csv master
data_warm <- read.csv("~/GitHub/diss/sup/velo_csvs/masters/data_warm.csv", stringsAsFactors = T)
data_warm <- data_warm[,-1]
please_work <- cbind.data.frame(data_warm, kinetics_info)
#### get max kinetics for each participant and cbind them to please_work ####
please_work %>% group_by(pID) %>%
summarise(max_elb_var = max(elb_var, na.rm = T),
max_shldr_ir = max(shldr_ir, na.rm = T),
min_elb_var = min(elb_var, na.rm = T),
min_shldr_ir = min(shldr_ir, na.rm = T)) -> max_kinetics
num_throws <- table(please_work$pID)
rep_velos <- data.frame()
for(i in 1:length(num_throws)){
max_var <- matrix(rep(max_kinetics$max_elb_var[i],num_throws[i]))
max_ir <- matrix(rep(max_kinetics$max_shldr_ir[i],num_throws[i]))
min_var <- matrix(rep(max_kinetics$min_elb_var[i], num_throws[i]))
min_ir <- matrix(rep(max_kinetics$min_shldr_ir[i], num_throws[i]))
data_new <- cbind(max_var, max_ir, min_var, min_ir)
rep_velos <- rbind.data.frame(rep_velos,data_new)
}
colnames(rep_velos) <- c("elb_var_max", "shldr_ir_max", "elb_var_min", "shldr_ir_min")
please_work <- cbind.data.frame(please_work, rep_velos)
write.csv(please_work, "~/GitHub/diss/data/please_work_test.csv")
please_work <- read.csv("~/GitHub/diss/data/please_work_test.csv", stringsAsFactors = T)
library(tidyverse)
library(patchwork)
path <- getwd()
please_work <- read.csv("~/GitHub/diss/data/please_work_test.csv", stringsAsFactors = T)
pIDs <- tibble(unique(please_work$pID))
p1 <- ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(5,1,nrow(pIDs))]), aes(x = shldr_ir, y = velo, shape = pID, color = pID, label = paste0(pID,".",throw))) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
xlab("Peak Shoulder ER Torque (Nm)") +
ylab("Velo (mph)") +
xlim(c(10,95))
p2 <- ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(5,1,nrow(pIDs))]), aes(x = elb_var, y = velo, shape = pID, color = pID, label = paste0(pID,".",throw))) +
geom_point(size = 3, show.legend =T) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
xlab("Peak Elbow Valgus Torque (Nm)") +
ylab("") +
xlim(c(10,95))
patchwork <- p1 + p2
patchwork + plot_annotation(
title = "how do joint loads change as throwing intensity increases?",
caption = "Kyle Wasserberger (@kwwAU)"
)
p1 <- plot(please_work$elb_var, please_work$velo)
lin.curve <- curve(cbind(1,x,x^2) %*% fixef(m3), add = T)
lin.data <- tibble(x = lin.curve[["x"]],
y = lin.curve[["y"]])
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(35,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
ggplot(data = please_work[which(please_work$pID == "p34"),], aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ poly(x,2), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Shoulder Rotation Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
p1 <- ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(5,1,nrow(pIDs))]), aes(x = shldr_ir, y = velo, shape = pID, color = pID, label = paste0(pID,".",throw))) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
xlab("Peak Shoulder ER Torque (Nm)") +
ylab("Velo (mph)") +
xlim(c(10,95))
p2 <- ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(5,1,nrow(pIDs))]), aes(x = elb_var, y = velo, shape = pID, color = pID, label = paste0(pID,".",throw))) +
geom_point(size = 3, show.legend =T) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
xlab("Peak Elbow Valgus Torque (Nm)") +
ylab("") +
xlim(c(10,95))
patchwork <- p1 + p2
patchwork + plot_annotation(
title = "how do joint loads change as throwing intensity increases?",
caption = "Kyle Wasserberger (@kwwAU)"
)
p1 <- ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(5,1,nrow(pIDs))]), aes(x = shldr_ir, y = velo, shape = pID, color = pID, label = paste0(pID,".",throw))) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
xlab("Peak Shoulder ER Torque (Nm)") +
ylab("Velo (mph)") +
xlim(c(10,95))
p2 <- ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(5,1,nrow(pIDs))]), aes(x = elb_var, y = velo, shape = pID, color = pID, label = paste0(pID,".",throw))) +
geom_point(size = 3, show.legend =T) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
xlab("Peak Elbow Valgus Torque (Nm)") +
ylab("") +
xlim(c(10,95))
patchwork <- p1 + p2
patchwork + plot_annotation(
title = "how do joint loads change as throwing intensity increases?",
caption = "Kyle Wasserberger (@kwwAU)"
)
p1 <- plot(please_work$elb_var, please_work$velo)
lin.curve <- curve(cbind(1,x,x^2) %*% fixef(m3), add = T)
lin.data <- tibble(x = lin.curve[["x"]],
y = lin.curve[["y"]])
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(35,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
View(please_work)
please_work <- read.csv("~/GitHub/diss/data/please_work.csv", stringsAsFactors = T)
p1 <- ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(5,1,nrow(pIDs))]), aes(x = shldr_ir, y = velo, shape = pID, color = pID, label = paste0(pID,".",throw))) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
xlab("Peak Shoulder ER Torque (Nm)") +
ylab("Velo (mph)") +
xlim(c(10,95))
p2 <- ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(5,1,nrow(pIDs))]), aes(x = elb_var, y = velo, shape = pID, color = pID, label = paste0(pID,".",throw))) +
geom_point(size = 3, show.legend =T) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
xlab("Peak Elbow Valgus Torque (Nm)") +
ylab("") +
xlim(c(10,95))
patchwork <- p1 + p2
patchwork + plot_annotation(
title = "how do joint loads change as throwing intensity increases?",
caption = "Kyle Wasserberger (@kwwAU)"
)
p1 <- plot(please_work$elb_var, please_work$velo)
lin.curve <- curve(cbind(1,x,x^2) %*% fixef(m3), add = T)
lin.data <- tibble(x = lin.curve[["x"]],
y = lin.curve[["y"]])
ggplot(data = subset(please_work, pID %in% pIDs[[1]][runif(35,1,nrow(pIDs))]),
aes(x = elb_var, y = velo, color = pID)) +
geom_point(size = 3, show.legend = F) +
# geom_label() +
theme_bw() +
theme(aspect.ratio = 1,
axis.text = element_text(size = 16),
axis.title = element_text(size = 14)) +
geom_smooth(method = "lm", formula = y ~ x + log(x), se = F, size = 1.5) +
# plot fixed effect line
geom_line(data = lin.data, aes(x = x, y = y), color = "black", size = 2) +
labs(x = "Elbow Torque (Nm)",
y = "Ball Speed (mph)",
caption = "Kyle Wasserberger (@kww_AU)")
#### initialize data frome and set directory ####
kinetics_info <- data.frame()
setwd("C:/Users/kylew/Documents/GitHub/diss/data/txts_test")
file_list <- list.files(pattern = "warmup")
#### loop through txt files ####
for(i in 1:length(file_list)){
txt_data <- read_delim(file_list[i], skip = 10, delim = "\t")
if(str_detect(file_list[i],pattern = "BAD")){
row_data <- c(NA,NA)} else{
if(max(txt_data$RwristLinVelo) > max(txt_data$LwristLinVelo)){
ind_max <- which.max(txt_data$RwristLinVelo)
} else{
ind_max <- which.max(txt_data$LwristLinVelo)
}
txt_new <- txt_data[1:ind_max,]
max_elb_var <- max(txt_new$var_mom)
max_shldr_IR <- max(txt_new$ir_mom)
row_data <- c(max_elb_var, max_shldr_IR)}
kinetics_info <- rbind.data.frame(kinetics_info, row_data)
}
?read_delim
library(tidyverse)
#
library(tidyverse)
#### initialize data frome and set directory ####
kinetics_info <- data.frame()
setwd("C:/Users/kylew/Documents/GitHub/diss/data/txts_test")
file_list <- list.files(pattern = "warmup")
#### loop through txt files ####
for(i in 1:length(file_list)){
txt_data <- read_delim(file_list[i], skip = 10, delim = "\t")
if(str_detect(file_list[i],pattern = "BAD")){
row_data <- c(NA,NA)} else{
if(max(txt_data$RwristLinVelo) > max(txt_data$LwristLinVelo)){
ind_max <- which.max(txt_data$RwristLinVelo)
} else{
ind_max <- which.max(txt_data$LwristLinVelo)
}
txt_new <- txt_data[1:ind_max,]
max_elb_var <- max(txt_new$var_mom)
max_shldr_IR <- max(txt_new$ir_mom)
row_data <- c(max_elb_var, max_shldr_IR)}
kinetics_info <- rbind.data.frame(kinetics_info, row_data)
}
# =====================
# get_kinetics.R
# purpose: runs through MotionMonitor txt outputs and cbinds generated dataframe to
#          original master csv from get_velos.R
# author: Kyle Wasserberger
# last updated: 2021-07-01
# =====================
#
library(tidyverse)
#### initialize data frome and set directory ####
kinetics_info <- data.frame()
setwd("C:/Users/kylew/Documents/GitHub/diss/data/txts_test")
file_list <- list.files(pattern = "warmup")
#### loop through txt files ####
for(i in 1:length(file_list)){
txt_data <- read_delim(file_list[i], skip = 10, delim = "\t")
if(str_detect(file_list[i],pattern = "BAD")){
row_data <- c(NA,NA)} else{
if(max(txt_data$RwristLinVelo) > max(txt_data$LwristLinVelo)){
ind_max <- which.max(txt_data$RwristLinVelo)
} else{
ind_max <- which.max(txt_data$LwristLinVelo)
}
txt_new <- txt_data[1:ind_max,]
max_elb_var <- max(txt_new$var_mom)
max_shldr_IR <- max(txt_new$ir_mom)
row_data <- c(max_elb_var, max_shldr_IR)}
kinetics_info <- rbind.data.frame(kinetics_info, row_data)
}
# customize data frame column names
colnames(kinetics_info) <- c("elb_var", "shldr_ir")
# bind data frame to velo csv master
data_warm <- read.csv("~/GitHub/diss/sup/velo_csvs/masters/data_warm.csv", stringsAsFactors = T)
data_warm <- data_warm[,-1]
please_work <- cbind.data.frame(data_warm, kinetics_info)
#### get max kinetics for each participant and cbind them to please_work ####
please_work %>% group_by(pID) %>%
summarise(max_elb_var = max(elb_var, na.rm = T),
max_shldr_ir = max(shldr_ir, na.rm = T),
min_elb_var = min(elb_var, na.rm = T),
min_shldr_ir = min(shldr_ir, na.rm = T)) -> max_kinetics
num_throws <- table(please_work$pID)
rep_velos <- data.frame()
for(i in 1:length(num_throws)){
max_var <- matrix(rep(max_kinetics$max_elb_var[i],num_throws[i]))
max_ir <- matrix(rep(max_kinetics$max_shldr_ir[i],num_throws[i]))
min_var <- matrix(rep(max_kinetics$min_elb_var[i], num_throws[i]))
min_ir <- matrix(rep(max_kinetics$min_shldr_ir[i], num_throws[i]))
data_new <- cbind(max_var, max_ir, min_var, min_ir)
rep_velos <- rbind.data.frame(rep_velos,data_new)
}
colnames(rep_velos) <- c("elb_var_max", "shldr_ir_max", "elb_var_min", "shldr_ir_min")
please_work <- cbind.data.frame(please_work, rep_velos)
write.csv(please_work, "~/GitHub/diss/data/please_work_test.csv")
file_list <- list.files(pattern = "warmup")
# =====================
# get_kinetics.R
# purpose: runs through MotionMonitor txt outputs and cbinds generated dataframe to
#          original master csv from get_velos.R
# author: Kyle Wasserberger
# last updated: 2021-07-01
# =====================
#
library(tidyverse)
#### initialize data frome and set directory ####
kinetics_info <- data.frame()
setwd("C:/Users/kylew/Documents/GitHub/diss/data/txts_test")
file_list <- list.files(pattern = "warmup")
#### loop through txt files ####
for(i in 1:length(file_list)){
txt_data <- read_delim(file_list[i], skip = 10, delim = "\t")
if(str_detect(file_list[i],pattern = "BAD")){
row_data <- c(NA,NA)} else{
if(max(txt_data$RwristLinVelo) > max(txt_data$LwristLinVelo)){
ind_max <- which.max(txt_data$RwristLinVelo)
} else{
ind_max <- which.max(txt_data$LwristLinVelo)
}
txt_new <- txt_data[1:ind_max,]
max_elb_var <- max(txt_new$var_mom)
max_shldr_IR <- max(txt_new$ir_mom)
row_data <- c(max_elb_var, max_shldr_IR)}
kinetics_info <- rbind.data.frame(kinetics_info, row_data)
}
# customize data frame column names
colnames(kinetics_info) <- c("elb_var", "shldr_ir")
# bind data frame to velo csv master
data_warm <- read.csv("~/GitHub/diss/sup/velo_csvs/masters/data_warm.csv", stringsAsFactors = T)
data_warm <- data_warm[,-1]
please_work <- cbind.data.frame(data_warm, kinetics_info)
#### get max kinetics for each participant and cbind them to please_work ####
please_work %>% group_by(pID) %>%
summarise(max_elb_var = max(elb_var, na.rm = T),
max_shldr_ir = max(shldr_ir, na.rm = T),
min_elb_var = min(elb_var, na.rm = T),
min_shldr_ir = min(shldr_ir, na.rm = T)) -> max_kinetics
num_throws <- table(please_work$pID)
rep_velos <- data.frame()
for(i in 1:length(num_throws)){
max_var <- matrix(rep(max_kinetics$max_elb_var[i],num_throws[i]))
max_ir <- matrix(rep(max_kinetics$max_shldr_ir[i],num_throws[i]))
min_var <- matrix(rep(max_kinetics$min_elb_var[i], num_throws[i]))
min_ir <- matrix(rep(max_kinetics$min_shldr_ir[i], num_throws[i]))
data_new <- cbind(max_var, max_ir, min_var, min_ir)
rep_velos <- rbind.data.frame(rep_velos,data_new)
}
colnames(rep_velos) <- c("elb_var_max", "shldr_ir_max", "elb_var_min", "shldr_ir_min")
please_work <- cbind.data.frame(please_work, rep_velos)
write.csv(please_work, "~/GitHub/diss/data/please_work_test.csv")
