write_csv(data_conds, file_name_conds)
# checks to make sure csv files exist in save directory
if(file.exists(file_name_conds) == TRUE & file.exists(file_name_warmup) == TRUE){
print(str_glue('velos extracted for ', sheets_final[i]))
}else{
stop('something went wrong, bro')
}
}
# get directory path and file info
path <- str_glue(getwd(),'sup/velo_csvs',.sep = '/')
files <- list.files(path = path, pattern = '_')
# create numeric vectors so for loops can separate warmup and condition velo files
file_num_conds <- seq(1,length(files),2)
file_num_warm <- seq(2,length(files),2)
# initialize blank data frames
data_conds <- data.frame()
data_warm <- data.frame()
# iterate over data frames using row bind
for(i in 1:I(length(files)/2)){
data_new <- read.csv(str_glue(path,files[file_num_conds[i]], .sep = '/'))
data_conds <- rbind.data.frame(data_conds, data_new)
data_new <- read.csv(str_glue(path,files[file_num_warm[i]], .sep = '/'))
data_warm <- rbind.data.frame(data_warm, data_new)
}
data_conds <- write.csv(data_conds, str_glue(path, 'masters', 'data_conds.csv', .sep = '/'))
data_warm <- write.csv(data_warm, str_glue(path, 'masters', 'data_warm.csv', .sep = '/'))
}
get_velos()
# ----------------------------------------------------
# get_velos.R
#
# Purpose: to Import velos from data collection googlesheets
# and separate them by participant
#
# retrieves velos from googlesheet, cleans data frame
# and saves them to the 'velo_csvs' subfolder
#
# author: Kyle Wasserberger
#
# Last Updated: 2021-04-27
# ----------------------------------------------------
# library(googlesheets4)
# library(tidyverse)
get_velos <- function(){
require(googlesheets4)
require(tidyverse)
# edit url if you need to access different googlesheet
url <- 'https://docs.google.com/spreadsheets/d/1PRBYjZcG9b8jB1vttNicup2MhdabkgZY-tJQMLTPxKc/'
# get individual sheet info and subset out demos and template sheets
sheet_info <- gs4_get(url)
sheet_names <- sheet_info[["sheets"]][["name"]]
# all participant data sheets are "pXX" so they have a sheet name of length 3
p_sheets <- sheet_names[str_length(sheet_names) == 3]
sheets_final <- rev(select.list(p_sheets, multiple = TRUE, graphics = TRUE, preselect = p_sheets))
if(is_empty(sheets_final)){
stop('no sheets selected')
}
# get directory path for csv saving
path <- getwd()
# get demo info for level 2 vars
# filtering by pNums listed above
demos <- read_sheet(ss = url, sheet = 'Demos') %>%
filter(pNum %in% sheets_final)
# loops through saving each csvs for each sheet with custom titles based on sheet name
for(i in 1:length(sheets_final)){
# read everything on sheet i
data <- read_sheet(ss = url, sheet = sheets_final[i])
# select warmup throws, rename, and clean data
data_warmup <- data[-1,] %>%
select(c('Throw', 'Vel_warm'))
data_warmup <- data_warmup[1:demos$NumThrows[i],]
data_warmup <- rename(data_warmup,
velo = Vel_warm,
throw = Throw)
data_warmup$velo <- as.numeric(data_warmup$velo)
data_warmup <- mutate(data_warmup, pID = sheets_final[i],
velo_max = max(velo, na.rm = TRUE),
velo_min = min(velo, na.rm = TRUE),
height = demos$Height[i],
mass = demos$Weight[i],
age = demos$Age[i],
hand = factor(demos$Hand[i]))
data_warmup <- data_warmup[,c('pID','age', 'mass', 'height', 'hand', 'velo_max', 'velo_min', 'throw', 'velo')]
# select condition throws, rename, and clean data
data_conds <- data %>%
select(c('Effort', 'Cond1', 'Cond2', 'Vel_cons'))
data_conds <- data_conds[-which(is.na(data_conds$Cond1)),] %>%
mutate(pID = factor(sheets_final[i]),
Effort = factor(Effort, levels = c('50', '75', '100')),
Cond1 = factor(Cond1, levels = c('step', 'crow')),
Cond2 = factor(Cond2, levels = c('rpe','velo')))
# get condition df in same order as c3d files
data_conds <- data_conds %>%
rename(cond_stp = Cond1,
cond_int = Cond2,
velo = Vel_cons,
effort = Effort) %>%
arrange(pID,cond_int,effort,desc(cond_stp))
data_conds <- data_conds[,c('pID','cond_int','effort','cond_stp','velo')]
# create file names for csvs
file_name_warmup <- str_glue(path, '/sup/velo_csvs/', sheets_final[i],'_','velos_warmup.csv')
file_name_conds <- str_glue(path,'/sup/velo_csvs/',sheets_final[i], '_', 'velos_conds.csv')
write_csv(data_warmup, file_name_warmup)
write_csv(data_conds, file_name_conds)
# checks to make sure csv files exist in save directory
if(file.exists(file_name_conds) == TRUE & file.exists(file_name_warmup) == TRUE){
print(str_glue('velos extracted for ', sheets_final[i]))
}else{
stop('something went wrong, bro')
}
}
# get directory path and file info
path <- str_glue(getwd(),'sup/velo_csvs',.sep = '/')
files <- list.files(path = path, pattern = '_')
# create numeric vectors so for loops can separate warmup and condition velo files
file_num_conds <- seq(1,length(files),2)
file_num_warm <- seq(2,length(files),2)
# initialize blank data frames
data_conds <- data.frame()
data_warm <- data.frame()
# iterate over data frames using row bind
for(i in 1:I(length(files)/2)){
data_new <- read.csv(str_glue(path,files[file_num_conds[i]], .sep = '/'))
data_conds <- rbind.data.frame(data_conds, data_new)
data_new <- read.csv(str_glue(path,files[file_num_warm[i]], .sep = '/'))
data_warm <- rbind.data.frame(data_warm, data_new)
}
data_conds <- write.csv(data_conds, str_glue(path, 'masters', 'data_conds.csv', .sep = '/'))
data_warm <- write.csv(data_warm, str_glue(path, 'masters', 'data_warm.csv', .sep = '/'))
}
get_velos()
d_warm <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_warm.csv"))
d_warm <- d_warm[,-1]
d_conds <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_conds.csv"))
d_conds <- d_conds[,-1]
library(tidyverse)
library(tools)
path <- getwd()
d_warm <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_warm.csv"))
d_warm <- d_warm[,-1]
d_conds <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_conds.csv"))
d_conds <- d_conds[,-1]
files_list <- list.files(str_glue(path, "/data/txts"), pattern = "warmup")
d <- read.delim(str_glue(path,"/data/txts/",files_list[37]), skip = 8)
check_file <- str_split(files_list[1],"_")
check_csv <- list(d_warm$pID[1],"warmup",as.character(d_warm$throw[1]))
newFileName <- data.frame()
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)}
warnings()
View(newFileName)
newFileName <- data.frame()
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)}
colnames(newFileName) <- "fName"
d_warm <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_warm.csv"))
d_warm <- d_warm[,-1]
d_conds <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_conds.csv"))
d_conds <- d_conds[,-1]
files_list <- list.files(str_glue(path, "/data/txts"), pattern = "warmup")
check_file <- str_split(files_list[1],"_")
check_csv <- list(d_warm$pID[1],"warmup",as.character(d_warm$throw[1]))
newFileName <- data.frame()
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)}
View(d_warm)
newFileName <- data.frame()
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)}
newFileName <- rbind.data.frame(newFileName,nameNew)
library(tidyverse)
library(tools)
path <- getwd()
d_warm <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_warm.csv"))
d_warm <- d_warm[,-1]
d_conds <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_conds.csv"))
d_conds <- d_conds[,-1]
files_list <- list.files(str_glue(path, "/data/txts"), pattern = "warmup")
newFileName <- data.frame()
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
}
i <- 1
newFileName <- data.frame()
i <- 1
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
i <- 2
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
View(newFileName)
rbind.data.frame(newFileName,nameNew)
rbind.data.frame(nameNew, newFileName)
newFileName <- data.frame()
colnames(newFileName) <- "fName"
newFileName <- data.frame(fName = NaN)
View(newFileName)
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
}
View(newFileName)
View(newFileName)
newFileName <- newFileName[-1,]
newFileName <- data.frame(fName = NaN)
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
}
View(newFileName)
newFileName[1]
newFileName[[1]]
newFileName[1][1]
newFileName[1][[1]]
View(newFileName)
newFileName[1,1
]
newFileName[2,1]
newFileName[1,]
newFileName <- newFileName[-1,]
newFileName <- data.frame(fName = NaN)
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
}
test <- newFileName[-1,]
newFileName <- data.frame()
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
}
View(newFileName)
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
}
newFileName <- rbind.data.frame(newFileName,nameNew)
install.packages(c("AICcmodavg", "arm", "backports", "bayestestR", "BH", "bitops", "boot", "broom", "callr", "car", "caTools", "class", "cli", "clipr", "cluster", "coda", "codetools", "colorspace", "conquer", "covr", "crayon", "crosstalk", "curl", "data.table", "DBI", "dbplyr", "desc", "devtools", "digest", "dplyr", "DT", "e1071", "effects", "ellipsis", "emmeans", "fansi", "farver", "fastmap", "forcats", "Formula", "fs", "generics", "ggplot2", "gh", "git2r", "glue", "gplots", "haven", "highr", "Hmisc", "hms", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "insight", "isoband", "jsonlite", "jtools", "KernSmooth", "knitr", "labeling", "later", "lattice", "lifecycle", "lme4", "lmerTest", "lmtest", "lubridate", "magrittr", "maptools", "MASS", "Matrix", "MatrixModels", "matrixStats", "memoise", "mgcv", "mime", "multcomp", "nlme", "nnet", "openssl", "openxlsx", "parameters", "pbkrtest", "performance", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "psych", "quantreg", "R6", "raster", "Rcmdr", "RcmdrMisc", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "remotes", "reprex", "rgl", "rio", "rlang", "rmarkdown", "robustbase", "rprojroot", "rstudioapi", "rvest", "sandwich", "shiny", "sp", "SparseM", "spatial", "statmod", "stringi", "survival", "testthat", "tibble", "tidyr", "tidyselect", "tidyverse", "tinytex", "unmarked", "usethis", "utf8", "vctrs", "VGAM", "viridis", "viridisLite", "withr", "xfun", "zip", "zoo"))
library(tidyverse)
library(tools)
path <- getwd()
d_warm <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_warm.csv"))
d_warm <- d_warm[,-1]
d_conds <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_conds.csv"))
d_conds <- d_conds[,-1]
files_list <- list.files(str_glue(path, "/data/txts"), pattern = "warmup")
d <- read.delim(str_glue(path,"/data/txts/",files_list[37]), skip = 8)
check_file <- str_split(files_list[1],"_")
check_csv <- list(d_warm$pID[1],"warmup",as.character(d_warm$throw[1]))
newFileName <- data.frame()
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
}
View(newFileName)
library(tidyverse)
library(tools)
path <- getwd()
d_warm <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_warm.csv"))
d_warm <- d_warm[,-1]
d_conds <- read.csv(str_glue(path,"/sup/velo_csvs/masters/data_conds.csv"))
d_conds <- d_conds[,-1]
files_list <- list.files(str_glue(path, "/data/txts"), pattern = "warmup")
d <- read.delim(str_glue(path,"/data/txts/",files_list[37]), skip = 8)
check_file <- str_split(files_list[1],"_")
check_csv <- list(d_warm$pID[1],"warmup",as.character(d_warm$throw[1]))
newFileName <- data.frame()
for(i in 1:nrow(d_warm)){
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
nameNew <- str_glue(nameNew, ".txt")
newFileName <- rbind.data.frame(newFileName,nameNew)
}
nameNew <- str_glue(file_path_sans_ext(files_list[i]), as.character(d_warm$velo[i]*10), .sep = "_")
View(d_warm)
nameNew <- str_glue(nameNew, ".txt")
require(googlesheets4)
require(tidyverse)
# edit url if you need to access different googlesheet
url <- 'https://docs.google.com/spreadsheets/d/1PRBYjZcG9b8jB1vttNicup2MhdabkgZY-tJQMLTPxKc/'
# get individual sheet info and subset out demos and template sheets
sheet_info <- gs4_get(url)
sheet_names <- sheet_info[["sheets"]][["name"]]
# all participant data sheets are "pXX" so they have a sheet name of length 3
p_sheets <- sheet_names[str_length(sheet_names) == 3]
View(sheet_info)
sheets_final <- rev(select.list(p_sheets, multiple = TRUE, graphics = TRUE, preselect = p_sheets))
demos <- read_sheet(ss = url, sheet = 'Demos')
which(demos$Consent == "Signed")
sheet_info$spreadsheet_id
# ----------------------------------------------------
# get_velos.R
#
# Purpose: to Import velos from data collection googlesheets
# and separate them by participant
#
# retrieves velos from googlesheet, cleans data frame
# and saves them to the 'velo_csvs' subfolder
#
# author: Kyle Wasserberger
#
# Last Updated: 2021-04-27
# ----------------------------------------------------
# library(googlesheets4)
# library(tidyverse)
get_velos <- function(){
require(googlesheets4)
require(tidyverse)
# edit url if you need to access different googlesheet
url <- 'https://docs.google.com/spreadsheets/d/1PRBYjZcG9b8jB1vttNicup2MhdabkgZY-tJQMLTPxKc/'
# get individual sheet info and subset out demos and template sheets
sheet_info <- gs4_get(url)
sheet_names <- sheet_info[["sheets"]][["name"]]
# all participant data sheets are "pXX" so they have a sheet name of length 3
p_sheets <- sheet_names[str_length(sheet_names) == 3]
sheets_final <- rev(select.list(p_sheets, multiple = TRUE, graphics = TRUE, preselect = p_sheets))
if(is_empty(sheets_final)){
stop('no sheets selected')
}
# get directory path for csv saving
path <- getwd()
# get demo info for level 2 vars
# filtering by pNums listed above
demos <- read_sheet(ss = url, sheet = 'Demos') %>%
filter(pNum %in% sheets_final)
# loops through saving each csvs for each sheet with custom titles based on sheet name
for(i in 1:length(sheets_final)){
# read everything on sheet i
data <- read_sheet(ss = url, sheet = sheets_final[i])
# select warmup throws, rename, and clean data
data_warmup <- data[-1,] %>%
select(c('Throw', 'Vel_warm'))
data_warmup <- data_warmup[1:demos$NumThrows[i],]
data_warmup <- rename(data_warmup,
velo = Vel_warm,
throw = Throw)
data_warmup$velo <- as.numeric(data_warmup$velo)
data_warmup <- mutate(data_warmup, pID = sheets_final[i],
velo_max = max(velo, na.rm = TRUE),
velo_min = min(velo, na.rm = TRUE),
height = demos$Height[i],
mass = demos$Weight[i],
age = demos$Age[i],
hand = factor(demos$Hand[i]))
data_warmup <- data_warmup[,c('pID','age', 'mass', 'height', 'hand', 'velo_max', 'velo_min', 'throw', 'velo')]
# select condition throws, rename, and clean data
data_conds <- data %>%
select(c('Effort', 'Cond1', 'Cond2', 'Vel_cons'))
data_conds <- data_conds[-which(is.na(data_conds$Cond1)),] %>%
mutate(pID = factor(sheets_final[i]),
Effort = factor(Effort, levels = c('50', '75', '100')),
Cond1 = factor(Cond1, levels = c('step', 'crow')),
Cond2 = factor(Cond2, levels = c('rpe','velo')))
# get condition df in same order as c3d files
data_conds <- data_conds %>%
rename(cond_stp = Cond1,
cond_int = Cond2,
velo = Vel_cons,
effort = Effort) %>%
arrange(pID,cond_int,effort,desc(cond_stp))
data_conds <- data_conds[,c('pID','cond_int','effort','cond_stp','velo')]
# create file names for csvs
file_name_warmup <- str_glue(path, '/sup/velo_csvs/', sheets_final[i],'_','velos_warmup.csv')
file_name_conds <- str_glue(path,'/sup/velo_csvs/',sheets_final[i], '_', 'velos_conds.csv')
write_csv(data_warmup, file_name_warmup)
write_csv(data_conds, file_name_conds)
# checks to make sure csv files exist in save directory
if(file.exists(file_name_conds) == TRUE & file.exists(file_name_warmup) == TRUE){
print(str_glue('velos extracted for ', sheets_final[i]))
}else{
stop('something went wrong, bro')
}
}
# get directory path and file info
path <- str_glue(getwd(),'sup/velo_csvs',.sep = '/')
files <- list.files(path = path, pattern = '_')
# create numeric vectors so for loops can separate warmup and condition velo files
file_num_conds <- seq(1,length(files),2)
file_num_warm <- seq(2,length(files),2)
# initialize blank data frames
data_conds <- data.frame()
data_warm <- data.frame()
# iterate over data frames using row bind
for(i in 1:I(length(files)/2)){
data_new <- read.csv(str_glue(path,files[file_num_conds[i]], .sep = '/'))
data_conds <- rbind.data.frame(data_conds, data_new)
data_new <- read.csv(str_glue(path,files[file_num_warm[i]], .sep = '/'))
data_warm <- rbind.data.frame(data_warm, data_new)
}
data_conds <- write.csv(data_conds, str_glue(path, 'masters', 'data_conds.csv', .sep = '/'))
data_warm <- write.csv(data_warm, str_glue(path, 'masters', 'data_warm.csv', .sep = '/'))
}
get_velos()
# ----------------------------------------------------
# get_velos.R
#
# Purpose: to Import velos from data collection googlesheets
# and separate them by participant
#
# retrieves velos from googlesheet, cleans data frame
# and saves them to the 'velo_csvs' subfolder
#
# author: Kyle Wasserberger
#
# Last Updated: 2021-04-27
# ----------------------------------------------------
# library(googlesheets4)
# library(tidyverse)
get_velos <- function(){
require(googlesheets4)
require(tidyverse)
# edit url if you need to access different googlesheet
url <- 'https://docs.google.com/spreadsheets/d/1PRBYjZcG9b8jB1vttNicup2MhdabkgZY-tJQMLTPxKc/'
# get individual sheet info and subset out demos and template sheets
sheet_info <- gs4_get(url)
sheet_names <- sheet_info[["sheets"]][["name"]]
# all participant data sheets are "pXX" so they have a sheet name of length 3
p_sheets <- sheet_names[str_length(sheet_names) == 3]
sheets_final <- rev(select.list(p_sheets, multiple = TRUE, graphics = TRUE, preselect = p_sheets))
if(is_empty(sheets_final)){
stop('no sheets selected')
}
# get directory path for csv saving
path <- getwd()
# get demo info for level 2 vars
# filtering by pNums listed above
demos <- read_sheet(ss = url, sheet = 'Demos') %>%
filter(pNum %in% sheets_final)
# loops through saving each csvs for each sheet with custom titles based on sheet name
for(i in 1:length(sheets_final)){
# read everything on sheet i
data <- read_sheet(ss = url, sheet = sheets_final[i])
# select warmup throws, rename, and clean data
data_warmup <- data[-1,] %>%
select(c('Throw', 'Vel_warm'))
data_warmup <- data_warmup[1:demos$NumThrows[i],]
data_warmup <- rename(data_warmup,
velo = Vel_warm,
throw = Throw)
data_warmup$velo <- as.numeric(data_warmup$velo)
data_warmup <- mutate(data_warmup, pID = sheets_final[i],
velo_max = max(velo, na.rm = TRUE),
velo_min = min(velo, na.rm = TRUE),
height = demos$Height[i],
mass = demos$Weight[i],
age = demos$Age[i],
hand = factor(demos$Hand[i]))
data_warmup <- data_warmup[,c('pID','age', 'mass', 'height', 'hand', 'velo_max', 'velo_min', 'throw', 'velo')]
# select condition throws, rename, and clean data
data_conds <- data %>%
select(c('Effort', 'Cond1', 'Cond2', 'Vel_cons'))
data_conds <- data_conds[-which(is.na(data_conds$Cond1)),] %>%
mutate(pID = factor(sheets_final[i]),
Effort = factor(Effort, levels = c('50', '75', '100')),
Cond1 = factor(Cond1, levels = c('step', 'crow')),
Cond2 = factor(Cond2, levels = c('rpe','velo')))
# get condition df in same order as c3d files
data_conds <- data_conds %>%
rename(cond_stp = Cond1,
cond_int = Cond2,
velo = Vel_cons,
effort = Effort) %>%
arrange(pID,cond_int,effort,desc(cond_stp))
data_conds <- data_conds[,c('pID','cond_int','effort','cond_stp','velo')]
# create file names for csvs
file_name_warmup <- str_glue(path, '/sup/velo_csvs/', sheets_final[i],'_','velos_warmup.csv')
file_name_conds <- str_glue(path,'/sup/velo_csvs/',sheets_final[i], '_', 'velos_conds.csv')
write_csv(data_warmup, file_name_warmup)
write_csv(data_conds, file_name_conds)
# checks to make sure csv files exist in save directory
if(file.exists(file_name_conds) == TRUE & file.exists(file_name_warmup) == TRUE){
print(str_glue('velos extracted for ', sheets_final[i]))
}else{
stop('something went wrong, bro')
}
}
# get directory path and file info
path <- str_glue(getwd(),'sup/velo_csvs',.sep = '/')
files <- list.files(path = path, pattern = '_')
# create numeric vectors so for loops can separate warmup and condition velo files
file_num_conds <- seq(1,length(files),2)
file_num_warm <- seq(2,length(files),2)
# initialize blank data frames
data_conds <- data.frame()
data_warm <- data.frame()
# iterate over data frames using row bind
for(i in 1:I(length(files)/2)){
data_new <- read.csv(str_glue(path,files[file_num_conds[i]], .sep = '/'))
data_conds <- rbind.data.frame(data_conds, data_new)
data_new <- read.csv(str_glue(path,files[file_num_warm[i]], .sep = '/'))
data_warm <- rbind.data.frame(data_warm, data_new)
}
data_conds <- write.csv(data_conds, str_glue(path, 'masters', 'data_conds.csv', .sep = '/'))
data_warm <- write.csv(data_warm, str_glue(path, 'masters', 'data_warm.csv', .sep = '/'))
}
get_velos()
